<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lyd.mapper.CustomerMapper">
    <!--根据客户名称和职业来查询-->
    <!--where标签自动生成和删除    还能删除where后第一个and-->
<!--    <select id="getCustomer" resultType="com.lyd.domain.Customer">
        select * from `customer`
        <where>
            <if test="name != null and name != ''">
                `cust_name` = #{name}
            </if>
            <if test="profession != null and profession != ''">
                and `cust_profession` = #{profession}
            </if>
        </where>
    </select>-->

    <!--trim标签：
        prefix：设置前缀 在第一个条件之前加一个前缀
        prefixOverrides：条件前缀覆盖 把第一个条件之前的and变成空
        suffix：设置后缀 在最后一个条件之后加一个后缀
        suffixOverrides：提哦啊见后缀覆盖 把最后一个条件之后的and变成空
    -->
    <!--<select id="getCustomer" resultType="com.lyd.domain.Customer">
        select * from `customer`
        <trim prefix="where" prefixOverrides="and" suffixOverrides="and">
            <if test="name != null and name != ''">
                and `cust_name` = #{name}
            </if>
            <if test="profession != null and profession != ''">
                and `cust_profession` = #{profession} and
            </if>
        </trim>
    </select>-->

    <!--choose  只要第一个条件满足，后面条件都不执行
        when
        otherwise
     -->
    <select id="getCustomer" resultType="com.lyd.domain.Customer">
        select * from `customer`
        <where>
            <choose>
                <when test="profession != null and profession != ''">
                    `cust_profession` = #{profession}
                </when>
                <when test="name != null and name != ''">
                    `cust_name` = #{name}
                </when>
                <otherwise> 1 = 1 </otherwise>
            </choose>
        </where>
    </select>

    <!--更新客户-->
    <!--set标签：会添加update中set  并且它会把最后一个逗号（，）去掉-->
    <update id="updateCustomer">
          update `customer`
        <set>
            <if test="cust_profession != null and cust_profession != ''">
                `cust_profession` = #{cust_profession},
            </if>
            <if test="cust_name != null and cust_name != ''">
                `cust_name` = #{cust_name},
            </if>
        </set>
        where cust_id = #{cust_id}
    </update>

    <!--根据id查询指定的客户 多个客户-->
    <select id="getCustomers" parameterType="QueryVo" resultType="com.lyd.domain.Customer">
          select * from `customer` where `cust_id` in
          <foreach collection="idList" open="(" close=")" separator="," item="ids">
              #{ids}
          </foreach>
    </select>

    <!--
        bind标签：可以取出传入的值。重新处理，赋值给另外一个值
    -->
    <select id="getCustomerWithId" resultType="com.lyd.domain.Customer">
          <bind name="newId" value="id+1"/>
          select * from `customer` where `cust_id` = #{newId}
    </select>











</mapper>
